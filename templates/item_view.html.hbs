<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Item Details - NeighborGoods</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            margin: 0;
            padding: 0;
            color: #6C584C;
            background-color: #F0EAD2;
        }
        /* Modal Styles */
        .modal-overlay {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 1000;
            justify-content: center;
            align-items: center;
        }
        .modal {
            background-color: #F0EAD2;
            border-radius: 8px;
            max-width: 500px;
            width: 90%;
            padding: 25px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
            animation: modalFadeIn 0.3s;
        }
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }
        .modal-title {
            font-size: 1.5rem;
            color: #A98467;
            margin: 0;
        }
        .close-modal {
            background: none;
            border: none;
            font-size: 1.5rem;
            cursor: pointer;
            color: #6C584C;
        }
        .modal-form {
            display: flex;
            flex-direction: column;
            gap: 15px;
        }
        .form-group {
            margin-bottom: 15px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: bold;
            color: #A98467;
        }
        .form-group select {
            width: 100%;
            padding: 10px;
            border: 1px solid #ADC178;
            border-radius: 4px;
            font-size: 1rem;
            color: #6C584C;
        }
        .modal-actions {
            display: flex;
            justify-content: flex-end;
            gap: 10px;
            margin-top: 20px;
        }
        @keyframes modalFadeIn {
            from { opacity: 0; transform: translateY(-20px); }
            to { opacity: 1; transform: translateY(0); }
        }
        .container {
            width: 85%;
            margin: 0 auto;
            padding: 20px;
        }
        header {
            background-color: #ADC178;
            color: #F0EAD2;
            padding: 1rem 0;
        }
        .header-content {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        h1, h2, h3 {
            color: #A98467;
        }
        h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        .tagline {
            font-size: 1.2rem;
            margin-top: 0;
            font-weight: normal;
        }
        .user-menu {
            display: flex;
            align-items: center;
        }
        .user-greeting {
            margin-right: 15px;
        }
        .nav-links {
            display: flex;
            gap: 20px;
        }
        .nav-links a {
            color: #F0EAD2;
            text-decoration: none;
            font-weight: bold;
        }
        .nav-links a:hover {
            text-decoration: underline;
        }
        .back-button {
            display: inline-block;
            margin-bottom: 20px;
            color: #A98467;
            text-decoration: none;
            font-weight: bold;
        }
        .back-button:hover {
            text-decoration: underline;
        }
        .item-container {
            display: flex;
            flex-wrap: wrap;
            gap: 30px;
            margin-bottom: 30px;
        }
        .item-image-container {
            flex: 1;
            min-width: 300px;
            background-color: #DDE5B6;
            border-radius: 5px;
            padding: 15px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        .item-image {
            max-width: 100%;
            max-height: 400px;
            object-fit: contain;
        }
        .item-details {
            flex: 2;
            min-width: 300px;
            background-color: #DDE5B6;
            border-radius: 5px;
            padding: 20px;
        }
        .item-name {
            font-size: 1.8rem;
            margin-bottom: 15px;
            color: #A98467;
        }
        .item-description {
            margin-bottom: 20px;
        }
        .item-meta {
            display: grid;
            grid-template-columns: 140px 1fr;
            gap: 10px;
            margin-bottom: 20px;
        }
        .meta-label {
            font-weight: bold;
        }
        .action-buttons {
            display: flex;
            gap: 15px;
            margin-top: 20px;
        }
        .action-button {
            background-color: #ADC178;
            color: #F0EAD2;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            font-size: 1rem;
            text-align: center;
            transition: background-color 0.3s;
        }
        .action-button:hover {
            background-color: #A98467;
        }
        .cancel-button {
            background-color: #6C584C;
            color: #F0EAD2;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            font-size: 1rem;
            text-align: center;
            transition: background-color 0.3s;
        }
        .cancel-button:hover {
            background-color: #4F4037;
        }
        .delete-button {
            background-color: #c14545;
            color: #F0EAD2;
            border: none;
            padding: 10px 15px;
            border-radius: 4px;
            cursor: pointer;
            font-weight: bold;
            text-decoration: none;
            display: inline-block;
            font-size: 1rem;
            text-align: center;
            transition: background-color 0.3s;
        }
        .delete-button:hover {
            background-color: #a13030;
        }
        .transfer-history {
            background-color: #DDE5B6;
            border-radius: 5px;
            padding: 20px;
            margin-bottom: 30px;
        }
        .transfer-item {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr;
            gap: 15px;
            padding: 15px 0;
            border-bottom: 1px solid #ADC178;
        }
        .transfer-header {
            font-weight: bold;
            color: #A98467;
        }
        .badges {
            display: flex;
            gap: 10px;
            margin-bottom: 15px;
        }
        .badge {
            padding: 5px 10px;
            border-radius: 15px;
            font-size: 0.9rem;
            font-weight: bold;
            background-color: #ADC178;
            color: #F0EAD2;
        }
        footer {
            background-color: #6C584C;
            color: #F0EAD2;
            text-align: center;
            padding: 1rem 0;
            margin-top: 2rem;
        }
        @media (max-width: 768px) {
            .container {
                width: 95%;
            }
            .header-content {
                flex-direction: column;
                text-align: center;
            }
            .user-menu {
                margin-top: 15px;
                flex-direction: column;
            }
            .nav-links {
                margin-top: 15px;
            }
            .item-container {
                flex-direction: column;
            }
            .item-meta {
                grid-template-columns: 1fr;
            }
            .action-buttons {
                flex-direction: column;
            }
            .transfer-item {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <header>
        <div class="container">
            <div class="header-content">
                <div>
                    <h1>NeighborGoods</h1>
                    <p class="tagline">A Federated Library of Things</p>
                </div>
                <div class="user-menu">
                    <div class="user-greeting">Welcome, {{user.name}}</div>
                    <div class="nav-links">
                        <a href="/inventory">Inventory</a>
                        <a href="/feed">Feed</a>
                        <a href="/campaigns">Campaigns</a>
                        <a href="/profile">My Profile</a>
                        <a href="/logout">Logout</a>
                    </div>
                </div>
            </div>
        </div>
    </header>

    <main class="container">
        <a href="/inventory" class="back-button">‚Üê Back to Inventory</a>
        
        <div class="item-container">
            <div class="item-image-container">
                {{#if item.upload_directory_path}}
                    <img src="/{{item.upload_directory_path}}" alt="{{item.name}}" class="item-image">
                {{else}}
                    <div style="color: #A98467; text-align: center;">No Image Available</div>
                {{/if}}
            </div>
            
            <div class="item-details">
                <h2 class="item-name">{{item.name}}</h2>
                
                {{#if item.description}}
                    <div class="item-description">{{item.description}}</div>
                {{else}}
                    <div class="item-description">No description available.</div>
                {{/if}}
                
                <div class="item-meta">
                    <div class="meta-label">Contributed by:</div>
                    <div>
                        {{contributor.name}}
                    </div>
                    
                    <div class="meta-label">Current Steward:</div>
                    <div>
                        {{#if current_steward}}
                            {{current_steward.name}}
                        {{else}}
                            Not available
                        {{/if}}
                    </div>
                    
                    <div class="meta-label">Contributed on:</div>
                    <div>{{item.created_at}}</div>
                </div>
                
                <div class="action-buttons">
                    {{#if transfers_with_stewards}}
                        {{#with transfers_with_stewards.[0] as |current|}}
                            {{#if (eq current.0.status "Completed")}}
                                {{#unless ../is_current_steward}}
                                    <!-- If I'm not the current steward, show the borrow button -->
                                    <button class="action-button" onclick="openTransferModal()">Request to Borrow</button>
                                {{/unless}}
                            {{/if}}
                        {{/with}}
                    {{/if}}
                    
                    <!-- Calculate if we need to show transfers link -->
                    {{#if is_current_steward}}
                        <!-- For condition b: User is current steward -->
                        {{#each transfers_with_stewards}}
                            {{#if (eq this.0.status "Reserved")}}
                                <a href="/items/transfers" class="action-button">View Pending Transfers</a>
                            {{/if}}
                        {{/each}}
                    {{else}}
                        <!-- For condition a: User has reserved transfer -->
                        {{#each transfers_with_stewards}}
                            {{#if (eq this.0.status "Reserved")}}
                                {{#if (eq this.1.id ../user.id)}}
                                    <a href="/items/transfers" class="action-button">View Pending Transfers</a>
                                {{/if}}
                            {{/if}}
                        {{/each}}
                    {{/if}}
                    
                    <!-- Show delete button only if the current user is the item contributor -->
                    {{#if (eq user.id item.contributed_by)}}
                        <button id="delete-item-btn" class="delete-button" onclick="confirmDelete('{{item.id}}')">
                            üóëÔ∏è Delete Item
                        </button>
                    {{/if}}
                </div>
            </div>
        </div>
        
        <div class="transfer-history">
            <h3>Stewardship History</h3>
            
            <div class="transfer-item transfer-header">
                <div>Date</div>
                <div>Purpose</div>
                <div>Steward</div>
                <div>Status</div>
            </div>
            
            {{#each transfers_with_stewards as |transfer|}}
            <div class="transfer-item">
                <div>{{transfer.0.updated_at}}</div>
                <div>{{transfer.0.purpose}}</div>
                <div>{{transfer.1.name}}</div>
                <div>{{transfer.0.status}}</div>
            </div>
            {{/each}}
        </div>
    </main>

    <footer>
        <div class="container">
            <p>&copy; 2025 NeighborGoods. A Federated Library of Things.</p>
        </div>
    </footer>

    <!-- Transfer Modal -->
    <div id="transferModal" class="modal-overlay">
        <div class="modal">
            <div class="modal-header">
                <h3 class="modal-title">Request to Borrow {{item.name}}</h3>
                <button class="close-modal" onclick="closeTransferModal()">√ó</button>
            </div>
            <form id="transfer-form" action="/items/{{item.id}}/transfer" method="POST" class="modal-form">
                <!-- Hidden input for the current user as recipient -->
                <input type="hidden" name="recipient_id" value="{{user.id}}">
                
                <div class="form-group">
                    <label for="transfer-purpose">Purpose:</label>
                    <select id="transfer-purpose" name="purpose" required>
                        <option value="" disabled selected>Select a purpose</option>
                        <option value="Use">Use</option>
                    </select>
                </div>
                
                <div class="modal-actions">
                    <button type="submit" class="action-button">Request Transfer</button>
                    <button type="button" class="cancel-button" onclick="closeTransferModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        function confirmDelete(itemId) {
            // Show confirmation dialog
            const isConfirmed = confirm("Are you sure you want to delete this item? This action cannot be undone.");
            
            // If user confirms, send DELETE request
            if (isConfirmed) {
                // Create fetch request to delete the item
                fetch(`/items/${itemId}`, {
                    method: 'DELETE',
                    headers: {
                        'Content-Type': 'application/json'
                    }
                })
                .then(response => {
                    if (response.redirected) {
                        // If the response contains a redirect URL, follow it
                        window.location.href = response.url;
                    } else {
                        // Handle the response based on status
                        if (response.ok) {
                            // Redirect to inventory page on success
                            window.location.href = '/inventory';
                        } else {
                            // Show error message
                            alert('Failed to delete item. Please try again.');
                        }
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    alert('An error occurred while deleting the item.');
                });
            }
        }
        
        // Modal functionality
        function openTransferModal() {
            document.getElementById('transferModal').style.display = 'flex';
            document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open
        }
        
        function closeTransferModal() {
            document.getElementById('transferModal').style.display = 'none';
            document.body.style.overflow = 'auto'; // Re-enable scrolling
        }
        
        // Close modal if clicking outside of it
        document.addEventListener('click', function(event) {
            const modal = document.querySelector('.modal');
            const modalOverlay = document.getElementById('transferModal');
            
            if (event.target === modalOverlay && !modal.contains(event.target)) {
                closeTransferModal();
            }
        });
    </script>
</body>
</html>
